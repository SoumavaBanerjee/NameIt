{"version":3,"sources":["components/navbar/index.js","components/searchbar/index.js","components/nameList/name/name.js","components/nameList/NameList.js","App.js","index.js"],"names":["Navbar","className","href","Searchbar","input","setInput","useState","barOpened","setBarOpened","inputFocus","useRef","onClick","current","focus","onFocus","onBlur","style","width","cursor","pointerEvents","onChange","e","target","value","ref","placeholder","marginLeft","name","rel","NameList","names","useMediaQuery","minWidth","slice","map","index","App","ReactDOM","render","document","getElementById"],"mappings":"wLAsBeA,EAlBA,WACb,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,2CAEF,+BACE,6BACE,mBAAGC,KAAK,qCAAR,sBAEF,6BACE,mBAAGA,KAAK,iDAAR,+B,gBC2CKC,EAtDG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACPC,oBAAS,GADF,mBAClCC,EADkC,KACvBC,EADuB,KAEnCC,EAAaC,mBAEnB,OACE,qBAAKT,UAAU,UAAf,SACE,sBACEA,UAAU,iBAEVU,QAAS,WAEPH,GAAa,GACbC,EAAWG,QAAQC,SAGrBC,QAAS,WACPN,GAAa,GACbC,EAAWG,QAAQC,SAGrBE,OAAQ,WACNP,GAAa,IAEfQ,MAAO,CACLC,MAAOV,EAAY,QAAU,OAC7BW,OAAQX,EAAY,OAAS,WAnBjC,UAsBE,wBACES,MAAO,CACLG,cAAeZ,EAAY,OAAS,OACpCW,OAAQX,EAAY,UAAY,QAElCN,UAAU,cACVU,QAAS,kBAAmBH,IAAZD,IANlB,SAQE,cAAC,IAAD,MAEF,uBACEa,SAAU,SAACC,GACThB,EAASgB,EAAEC,OAAOC,QAEpBtB,UAAU,YACVuB,IAAKf,EACLc,MAAOnB,EAEPqB,YAAY,YACZT,MAAO,CAAEU,WAAYnB,EAAY,OAAS,gB,yBC9BrCoB,G,OAlBF,YAAe,IAAZA,EAAW,EAAXA,KAId,OACE,mBACE1B,UAAU,WACVC,KAAI,UALN,mEAKM,OAAoByB,GACxBL,OAAO,SACPM,IAAI,aAJN,SAME,qBAAK3B,UAAU,OAAf,SACE,4BAAI0B,U,QCKGE,EAdE,SAAC,GAAyB,IAAvBzB,EAAsB,EAAtBA,MAGZ0B,GAHkC,EAAfzB,SACR0B,wBAAc,CAAEC,SAAU,MAElBL,IAAKvB,GAAO6B,MAAM,EAAG,IAAMN,IAAKvB,GAAO6B,MAAM,EAAG,IAEzE,OACE,qBAAKhC,UAAU,WAAf,SACG6B,EAAMI,KAAI,SAACP,EAAMQ,GAChB,OAAO,cAAC,EAAD,CAAkBR,KAAMA,GAAbQ,SCOXC,MAff,WAAgB,IAAD,EACa9B,mBAAS,IADtB,mBACNF,EADM,KACCC,EADD,KAEb,OACE,sBAAKJ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,CAAWG,MAAOA,EAAOC,SAAUA,MAErC,qBAAKJ,UAAU,gBAAf,SACE,cAAC,EAAD,CAAUI,SAAUA,EAAUD,MAAOA,UCX7CiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.6d94d548.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport \"./styles.scss\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"nav\">\n      <div className=\"nav__logo\">\n        <h1>Name-It</h1>\n      </div>\n      <ul>\n        <li>\n          <a href=\"https://github.com/SoumavaBanerjee\">Github</a>\n        </li>\n        <li>\n          <a href=\"https://www.linkedin.com/in/soumavabanerjee--/\">LinkedIn</a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useRef } from \"react\";\nimport \"./styles.scss\";\nimport { BiSearchAlt } from \"react-icons/bi\";\n\nconst Searchbar = ({ input, setInput }) => {\n  const [barOpened, setBarOpened] = useState(false);\n  const inputFocus = useRef();\n\n  return (\n    <div className=\"wrapper\">\n      <div\n        className=\"input__wrapper\"\n        // barOpened={barOpened}\n        onClick={() => {\n          // When form clicked, set state of baropened to true and focus the input\n          setBarOpened(true);\n          inputFocus.current.focus();\n        }}\n        // on focus open search bar\n        onFocus={() => {\n          setBarOpened(true);\n          inputFocus.current.focus();\n        }}\n        // on blur close search bar\n        onBlur={() => {\n          setBarOpened(false);\n        }}\n        style={{\n          width: barOpened ? \"20rem\" : \"2rem\",\n          cursor: barOpened ? \"auto\" : \"pointer\",\n        }}\n      >\n        <button\n          style={{\n            pointerEvents: barOpened ? \"auto\" : \"none\",\n            cursor: barOpened ? \"pointer\" : \"none\",\n          }}\n          className=\"search__btn\"\n          onClick={() => (barOpened ? setBarOpened(true) : setBarOpened(false))}\n        >\n          <BiSearchAlt />\n        </button>\n        <input\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n          className=\"searchbar\"\n          ref={inputFocus}\n          value={input}\n          // barOpened={barOpened}\n          placeholder=\"Search...\"\n          style={{ marginLeft: barOpened ? \"1rem\" : \"0rem\" }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Searchbar;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nconst name = ({ name }) => {\n  const nameCheapUrl =\n    \"https://www.namecheap.com/domains/registration/results/?domain=\";\n\n  return (\n    <a\n      className=\"nameLink\"\n      href={`${nameCheapUrl}${name}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <div className=\"card\">\n        <p>{name}</p>\n      </div>\n    </a>\n  );\n};\n\nexport default name;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport name from \"@rstacruz/startup-name-generator\";\nimport Name from \"./name/name\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst NameList = ({ input, setInput }) => {\n  const isMobile = useMediaQuery({ minWidth: 767 });\n\n  const names = isMobile ? name(input).slice(0, 20) : name(input).slice(0, 6);\n\n  return (\n    <div className=\"Namelist\">\n      {names.map((name, index) => {\n        return <Name key={index} name={name} />;\n      })}\n    </div>\n  );\n};\n\nexport default NameList;\n","import { useState } from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./components/navbar/index\";\nimport Searchbar from \"./components/searchbar\";\nimport NameList from \"./components/nameList/NameList\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"search__container\">\n        <Searchbar input={input} setInput={setInput} />\n      </div>\n      <div className=\"name__wrapper\">\n        <NameList setInput={setInput} input={input} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}